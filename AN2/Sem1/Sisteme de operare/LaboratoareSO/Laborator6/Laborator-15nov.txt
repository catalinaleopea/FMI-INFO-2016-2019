#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>
#include<dirent.h>

//exemplu structura
typedef struct{
int a;
}masina;
//functie care imi spune daca e . sau .. pt un nume dat
int is_special_directory(char* name){
if(strcmp(".",name)==0 || strcmp("..",name)==0){
	return 1;
	}
return 0;
}

int is_directory(char* name){
	struct stat info;
	stat(name, &info);

	return S_ISDIR(info,st_mode);
}

int my_remove(char* name){
struct stat info;
stat(name,&info);
if(S_ISDIR(info,st_mode){
return rmdir(name);
}
else {
return unlink(name);
}
}
void operation(char* name){
puts(name);
}
void listdir(char* name){
DIR* director;
struct dirent* entry;
static int nivel=0;

director=opendir(name); //prin opendir primim o referinta catre director
if(director==NULL)return;
puts(name);
chdir(name);
nivel++;
printf("Ma aflu la nivelul: %d\n",nivel);

while((entry= readdir(director)) != NULL){
if(is_special_directory(entry->d_name))
	continue;
if(is_directory(entry->d_name)){
	//listdir(entry->d_name);
	removedir(entry->d_name);
	}
//se ajunge aici daca directorul nu este . sau .. sau daca nu e director
//sau daca nu se face apel

operation(entry->d_name);
}
chdir(".."); //revenim la directorul parinte
nivel--;
closedir(director); //inchidem resursa

}

void func(){
static int i=0;
i++;
printf("%d\n",i);
}

int main(int argc, char* argv[])
{
printf("%d/n",open(argv[1],O_RDONLY));
puts(argv[1]);

//printf("%d\n",rmdir(argv[1]));
//unlink(fisier); //sterge legatura fizica asociata fisierului 
listdir(argv[1]);
//masina BMW; - nu se mai scrie struct in declarare pt ca s-a folosit typedef
//BMW.a=2;

/*func();
func();
func();*/
//se afiseaza 1 1 1 la declarare fara static 
//cu static-> fiecare valoare e incrementata 
//folosim variabila statica pentru a retine pe ce nivel ne aflam

const int nemodificabil=0;
nemodificabil=7; //eroare
return 0;
}